name: Refresh minty.txt (install via Homebrew)

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: write

env:
  # update this when you create a new release containing tarballs
  LLMINTY_VERSION: "v0.1.1"

jobs:
  refresh-minty:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Detect arch
        id: arch
        run: |
          ARCH=$(uname -m)
          echo "arch=$ARCH" >> $GITHUB_OUTPUT

      - name: Install via Homebrew (arm64) or download asset (x86_64)
        shell: bash
        run: |
          set -euo pipefail
          ARCH="${{ steps.arch.outputs.arch }}"
          echo "Runner arch: $ARCH"

          if [[ "$ARCH" == "arm64" ]]; then
            echo "Using Homebrew tap (arm64)"
            brew tap 3lvis/llminty || true
            # install llminty (will download the tarball defined in the formula)
            brew install 3lvis/llminty/llminty || brew upgrade 3lvis/llminty/llminty || true
          else
            echo "Non-arm64 runner. Trying to download x86_64 release asset."

            TAG="${LLMINTY_VERSION}"
            ASSET_NAME="llminty-${TAG}-macos-x86_64.tar.gz"
            DOWNLOAD_URL="https://github.com/3lvis/LLMinty/releases/download/${TAG}/${ASSET_NAME}"

            echo "Downloading $DOWNLOAD_URL"
            if curl -fL -o /tmp/${ASSET_NAME} "$DOWNLOAD_URL"; then
              tar -xzf /tmp/${ASSET_NAME} -C /tmp
              chmod +x /tmp/llminty
              mv /tmp/llminty ./llminty.installed
              echo "Downloaded binary moved to ./llminty.installed"
            else
              echo "Release asset $ASSET_NAME not found. Please upload an x86_64 tarball to the GitHub Release, or run on an arm64 runner."
              exit 2
            fi
          fi

      - name: Show installed binary info
        run: |
          set -euo pipefail
          if command -v llminty >/dev/null 2>&1; then
            WHICH="$(which llminty)"
            echo "llminty installed at: $WHICH"
            file "$WHICH" || true
            "$WHICH" --help || true
          elif [[ -f "./llminty.installed" ]]; then
            echo "Using local downloaded binary ./llminty.installed"
            ./llminty.installed --help || true
          else
            echo "No llminty binary found"
            exit 1
          fi

      - name: Run llminty
        run: |
          set -euo pipefail
          if command -v llminty >/dev/null 2>&1; then
            llminty
          else
            ./llminty.installed
          fi

      - name: Commit & push updated minty.txt (only on direct push to main)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add minty.txt || true
          if ! git diff --quiet --exit-code --staged; then
            git commit -m "chore: refresh minty.txt (CI)"
            git push origin HEAD:main
          else
            echo "No changes to minty.txt"
          fi
